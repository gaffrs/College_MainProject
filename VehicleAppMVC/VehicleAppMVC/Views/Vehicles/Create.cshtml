@model VehicleAppMVC.Models.Vehicle

@{
    ViewBag.Title = "Add Vehicle";
}

<h2>@ViewBag.Title</h2>
@*<h2>Create</h2>*@


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Enter Vehicle details</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*Temp message to show if Vehicles have not been created*@
                @if (TempData["notice"] != null)
                {
                    <h4><font color="#C11B17">@TempData["notice"]</font></h4>
                }
        
        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationUserId, "User", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ApplicationUserId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ApplicationUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleMake, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleMake, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleMake, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleModel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleModel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleModel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleRegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VehicleRegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VehicleRegistrationNumber, "", new { @class = "text-danger" })
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VehicleOdometerMileage, htmlAttributes: new { @class = "control-label col-md-2" })
                @*@(@Model.Consumption[1].ToString())*@

                @*@Model.Consumption[0].ToString()*@
                @*@Html.DisplayFor(m => m.[0].Consumption)*@
                @*@Html.LabelFor(m => m[list].ArrayList Consumption)*@
                @*@Model..Select(x => x.Vehicle.Consumption[1]).FirstOrDefault().ToString())*@
                @*@Model.Select(x => x.Vehicle.Consumption[1]).FirstOrDefault().ToString())*@
                @*@Html.DisplayFor(m => m.Consumption, iList[0])*@
                @*@Html.LabelFor(model => model.Consumption.ToString(), htmlAttributes: new { @class = "control-label col-md-2" })*@
                @*@Html.DisplayFor(model => model.iList[0])*@
                @*@Html.ValueForModel("Consumption")*@
                @*@Html.LabelFor(x => x.Consumption, Model.Consumption)*@
                @*@Html.DisplayTextFor(model => model.Consumption.ToString());*@

                <div class="col-md-10">
                    @Html.EditorFor(model => model.VehicleOdometerMileage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VehicleOdometerMileage, "", new { @class = "text-danger" })
                </div>
            </div>

            @*@Html.ValueFor(model => model.Consumption[0].ToString())*@


            @*@@Html.DisplayFor(model => model[0].Consumption)*@
            @*@Html.DisplayNameFor(ArrayList..Consumption..GetEnumerator.ToString())*@

            <div class="form-group">
                @Html.LabelFor(model => model.SettingFuelType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.SettingFuelType, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SettingFuelType, "", new { @class = "text-danger" })
                </div>
            </div>
            @*
            <div class="form-group">
                @Html.LabelFor(model => model.SettingDistance, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.SettingDistance, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SettingDistance, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SettingVolume, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.SettingVolume, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SettingVolume, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SettingConsumption, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.SettingConsumption, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SettingConsumption, "", new { @class = "text-danger" })
                </div>
            </div>
            *@
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back to Vehicle List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

