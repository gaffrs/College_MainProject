@model IEnumerable<VehicleAppMVC.Models.Fuel>

<table class="table-condensed" width="350" align="right" style="background-color :lightslategray">
    <tr>
        <th>
            Fuel statistics
        </th>
    </tr>
    <tr>
        <th></th>
        <th>
            Total
        </th>

        <th>
            Average
        </th>

        <th>
            Highest @*Max*@
        </th>
        <th>
            Lowest @*Min*@
        </th>

    <tr>
        <th>
            Cost:
        </th>
        <th>
            @*CG: Calculate Total Cost for the View*@
            @Model.Sum(x => x.FuelCost)
        </th>

        <th>
            @*CG: Calculate Average Cost for the View*@
            @(@Model.FirstOrDefault() == null ? "" : @Model.Select(x => x.FuelCost).Average().ToString("#.##"))         @*OR*@ @*Average Cost: €@((Model.Sum(x => x.FuelCost) / Model.Count()))*@
        </th>

        <th>
            @*CG: Calculate Max Cost for the View*@
            @(@Model.FirstOrDefault() == null ? "" : @Model.Select(x => x.FuelCost).Max().ToString("#.##"))
        </th>

        <th>
            @*CG: Calculate Min Cost for the View*@
            @(@Model.FirstOrDefault() == null ? "" : @Model.Select(x => x.FuelCost).Min().ToString("#.##"))
        </th>
    </tr>

    <tr>
        <th>
            Unit Price:
        </th>
        <th>
        </th>
        <th>
            @*CG: Calculate Average Cost for the View*@
            @(@Model.FirstOrDefault() == null ? "" : @Model.Select(x => x.FuelUnitPrice).Average().ToString("#.##"))         @*OR*@ @*Average Cost: €@((Model.Sum(x => x.FuelCost) / Model.Count()))*@
        </th>

        <th>
            @*CG: Calculate Max Cost for the View*@
            @(@Model.FirstOrDefault() == null ? "" : @Model.Select(x => x.FuelUnitPrice).Max().ToString("#.##"))
        </th>

        <th>
            @*CG: Calculate Min Cost for the View*@
            @(@Model.FirstOrDefault() == null ? "" : @Model.Select(x => x.FuelUnitPrice).Min().ToString("#.##"))
        </th>
    </tr>

    <tr>
        <th>
            Consumption :
        </th>
        <th>
        </th>

        <th>FIX THIS
            @*CG: Calculate Average Cost for the View*@
@*          @(@Model.FirstOrDefault() == null ? "" : @Model.Where(x => x.FuelConsumption > 0).Select(x => x.FuelConsumption).Average().ToString("#.##")) *@     @*OR*@ @*Average Cost: €@((Model.Sum(x => x.FuelCost) / Model.Count()))*@
        </th>

        
        <th>FIX THIS
            @*CG: Calculate Max Cost for the View*@
@*            @(@Model.FirstOrDefault() == null ? "" : @Model.Where(x => x.FuelConsumption > 0).Select(x => x.FuelConsumption).Max().ToString("#.##"))      *@
        </th>

        <th>FIX THIS
        @*CG: Calculate Min Cost for the View*@
@*            @(@Model.FirstOrDefault() == null ? "" : @Model.Where(x => x.FuelConsumption > 0).Select(x => x.FuelConsumption).Min().ToString("#.##"))      *@
        </th>
    </tr>
    <tr></tr>
</table>

 

@{
                ViewBag.Title = "Fuel-fill Log";
            }

<h2> @ViewBag.Title </h2>


<p>
    @Html.ActionLink("Add Fuel-fill", "Create")
</p>



@*Search fields*@
@using (Html.BeginForm())
{
    <p>
        @Html.TextBox("SearchString")
        <input type="submit" value="Search by Registration/Year" />
    </p>
    <p>
        @Html.TextBox("StartDate", "Start Date")  @Html.TextBox("FinishDate", "Finish Date")
        <input type="submit" value="Search by Date Range" />
    </p>
}

<p><em> NOTE: A FULL tank of fuel is required to initiate consumption calculations. Consumption results will ONLY get displayed on subsequent fill-ups </em></p> 

<table class="table">
    @*New for sorting*@
    <tr>
        <th>
            @Html.ActionLink("Vehicle Registration", "Index", new { sortOrder = ViewBag.NameSortParmReg })      @*CG: Edited*@
            @*@Html.DisplayNameFor(model => model.Vehicle.ApplicationUserId)*@
        </th>

        <th>
            @Html.ActionLink("Fuel Date", "Index", new { sortOrder = ViewBag.DateSortParmDate })
        </th>
        @*
            <th>
                @Html.DisplayNameFor(model => model.FuelDate)
            </th>
        *@
        <th>
            @Html.DisplayNameFor(model => model.FuelOdometerMileage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FuelQuantity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FuelUnitPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FuelCost)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FuelPartialFill)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FuelConsumption)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Vehicle.VehicleRegistrationNumber)       @*CG: Edited*@
                @*@Html.DisplayFor(modelItem => item.Vehicle.ApplicationUserId)*@
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelOdometerMileage)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelQuantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelUnitPrice)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelCost)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelPartialFill)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelConsumption)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.FuelID }) |
                @Html.ActionLink("Details", "Details", new { id = item.FuelID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.FuelID })
            </td>
        </tr>
    }

</table>


@*Trying to show wht the users current settings are*@
@*

    @using Microsoft.AspNet.Identity

    <dt>
        @Html.DisplayNameFor(model => model.Vehicle.ApplicationUser.VehicleUnit)
    </dt>
    <dt>
        @Html.DisplayFor(dbo.User.Identity.GetUserName())
    </dt>
*@

